/// Common dependencies.
#[doc(inline)]
pub use luwen_core as core;

/// PCIe communication.
#[doc(inline)]
pub use luwen_ref as pcie;

/// Generalized driver API.
///
/// Main user-mode interface exposed by luwen.
#[doc(inline)]
pub use luwen_if as api;

/// Kernel-mode driver API.
#[doc(inline)]
pub use ttkmd_if as kmd;

/// Error types.
#[doc(hidden)]
pub mod err {
    /// A convenient type alias for [`Result`](std::result::Result).
    pub type Result<T, E = Error> = std::result::Result<T, E>;

    /// A top-level error generated by luwen.
    pub use crate::pcie::error::LuwenError as Error;
}

pub use err::{Error, Result};
